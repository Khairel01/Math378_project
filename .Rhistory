library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
```{r}
library(palmerpenguins)
library(palmerpenguins)
library(dplyr)
library(ggplot2)
```{r}
library(palmerpenguins)
library(palmerpenguins)
library(dplyr)
library(ggplot2)
library(palmerpenguins)
library(dplyr)
library(palmerpenguins)
library(dplyr)
library(ggplot2)
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
install.packages("palmerpenguins")
library(palmerpenguins)
renv::init()
install.packages("yaml")
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
library(dbplyr)
renv::init()
install.packages("DBI")
install.packages("DBI")
renv::clearCache()
renv::deactivate()  # Temporarily deactivate `renv`
renv::deactivate()  # Temporarily deactivate `renv`
install.packages("DBI")
shiny::runApp()
library(reticulate)
reticulate::repl_python()
import duckdb
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from pins import board_folder
from vetiver import vetiver_pin_write, VetiverModel
# Example model creation (replace this with your actual model training code)
v = VetiverModel(model, model_name = 'penguin_model', prototype_data = X)
# Setting up a board directory for storing the model
model_board = board_folder("/data/model", allow_pickle_read=True)
# Saving the model to the specified directory
vetiver_pin_write(model_board, v, "penguin_model")
from vetiver import VetiverAPI
# Assuming 'v' is already loaded from the pin in the previous step
app = VetiverAPI(v, check_prototype=True)
# Run the API
#if __name__ == "__main__":
#    app.run(port=8080)
quit
runApp()
runApp()
runApp()
runApp()
