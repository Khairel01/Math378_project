---
title: "Model"
format:
  html:
    code-fold: true
---

```{r}
library(reticulate)
```

```{python}
import duckdb
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

## Get Data

```{python}

con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()

df.head(3)
```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
from pins import board_folder
from vetiver import vetiver_pin_write, VetiverModel

# Example model creation (replace this with your actual model training code)
v = VetiverModel(model, model_name = 'penguin_model', prototype_data = X)

# Setting up a board directory for storing the model
model_board = board_folder("/data/model", allow_pickle_read=True)

# Saving the model to the specified directory
vetiver_pin_write(model_board, v, "penguin_model")
```

```{python}
from vetiver import VetiverAPI

# Assuming 'v' is already loaded from the pin in the previous step
app = VetiverAPI(v, check_prototype=True)

# Run the API
#if __name__ == "__main__":
#    app.run(port=8080)
```

```{python}
#from vetiver import prepare_docker
#prepare_docker(model_board, "penguin_model")
```
