{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.3.3 (2024-02-29 ucrt) -- \"Angel Food Cake\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()'",
        " on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n- Project 'C:/Users/C25Mohamad.MohdKh.MY/Math378_Project_new' loaded. [renv 1.0.5]\n- The project is out-of-sync -- use `renv::status()` for details.\n[Workspace loaded from C:/Users/C25Mohamad.MohdKh.MY/Math378_Project_new/.RData]\r\n\r\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "2",
        "- Resolving missing dependencies ... \n# Installing packages --------------------------------------------------------\nThe following package(s) were not installed successfully:\n- [DBI]: package 'DBI' is not available\n- [duckdb]: package 'duckdb' is not available\n- [dbplyr]: package 'dbplyr' is not available\nYou may need to manually download and install these packages.\n\n- The lockfile is already up to date.\n\nRestarting R session...\n\n",
        "- Project 'C:/Users/C25Mohamad.MohdKh.MY/Math378_Project_new' loaded. [renv 1.0.5]\n- The project is out-of-sync -- use `renv::status()` for details.\n",
        "> ",
        "renv::status",
        "function (project = NULL, ..., library = NULL, lockfile = NULL, \n    sources = TRUE, cache = FALSE, dev = FALSE) \n{\n    renv_scope_error_handler()\n    renv_dots_check(...)\n    renv_snapshot_auto_suppress_next()\n    renv_scope_options(renv.prompt.enabled = FALSE)\n    the$status_running <- TRUE\n    defer(the$status_running <- FALSE)\n    project <- renv_project_resolve(project)\n    renv_project_lock(project = project)\n    if (!renv_status_check_initialized(project, library, lockfile)) {\n        result <- list(",
        "library = list(Packages = named(list())), \n            lockfile = list(Packages = named(list())), synchronized = FALSE)\n        return(invisible(result))\n    }\n    libpaths <- library %||% renv_libpaths_resolve()\n    lockpath <- lockfile %||% renv_paths_lockfile(project = project)\n    dependencies <- renv_snapshot_dependencies(project, dev = dev)\n    packages <- sort(union(dependencies, \"renv\"))\n    paths <- renv_package_dependencies(packages, libpaths = libpaths, \n        project = project)\n    packages <-",
        " as.character(names(paths))\n    lockfile <- if (file.exists(lockpath)) \n        renv_lockfile_read(lockpath)\n    else renv_lockfile_init(project = project)\n    library <- renv_lockfile_create(libpaths = libpaths, type = \"all\", \n        prompt = FALSE, project = project)\n    ignored <- c(renv_project_ignored_packages(project), renv_packages_base(), \n        if (renv_tests_running()) \"renv\")\n    packages <- setdiff(packages, ignored)\n    renv_lockfile_records(lockfile) <- omit(renv_lockfile_records(lockfile),",
        " \n        ignored)\n    renv_lockfile_records(library) <- omit(renv_lockfile_records(library), \n        ignored)\n    synchronized <- all(renv_status_check_consistent(lockfile, \n        library, packages), renv_status_check_synchronized(lockfile, \n        library), renv_status_check_version(lockfile))\n    if (sources) {\n        synchronized <- synchronized && renv_status_check_unknown_sources(project, \n            lockfile)\n    }\n    if (cache) \n        renv_status_check_cache(project)\n    if (synchronized) \n",
        "        writef(\"No issues found -- the project is in a consistent state.\")\n    else writef(\"See ?renv::status() for advice on resolving these issues.\")\n    result <- list(library = library, lockfile = lockfile, synchronized = synchronized)\n    invisible(result)\n}\n<bytecode: 0x00000293cc736b08>\n<environment: namespace:renv>\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "1",
        "- The library is already synchronized with the lockfile.\n\nRestarting R session...\n\n",
        "- Project 'C:/Users/C25Mohamad.MohdKh.MY/Math378_Project_new' loaded. [renv 1.0.5]\n- The project is out-of-sync -- use `renv::status()` for details.\n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.12.2 (C:/Program Files/Python312/python.exe)\nReticulate 1.36.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "import duckdb",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"\u001B[90m\u001B]8;line = 122;file://C:\\Users\\C25Mohamad.MohdKh.MY\\Math378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\C25Mohamad.MohdKh.MY\\Math378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 122, in _find_and_load_hook\n    return _run_hook(name, _hook)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"\u001B[90m\u001B]8;line = 96;file://C:\\Us",
        "ers\\C25Mohamad.MohdKh.MY\\Math378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\C25Mohamad.MohdKh.MY\\Math378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 96, in _run_hook\n    module = hook()\n             ^^^^^^\n  File \"\u001B[90m\u001B]8;line = 120;file://C:\\Users\\C25Mohamad.MohdKh.MY\\Math378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\C25Mohamad.MohdKh.MY\\Ma",
        "th378_Project_new\\renv\\library\\R-4.3\\x86_64-w64-mingw32\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 120, in _hook\n    return _find_and_load(name, import_)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nModuleNotFoundError: No module named 'duckdb'\n",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'duckdb' is not defined\n",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'con' is not defined\n",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'df' is not defined\n",
        ">>> ",
        ">>> ",
        "import duckdb",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nduckdb.duckdb.InvalidInputException: Invalid Input Error: Python Object \"penguins\" of type \"module\" found on line \"<string>:1\" not suitable for replacement scans.\nMake sure that \"penguins\" is either a pandas.DataFrame, duckdb.DuckDBPyRelation, pyarrow Table, Dataset, RecordBatchReader, Scanner, or NumPy ndarrays with supported format\n",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'df' is not defined\n",
        ">>> ",
        ">>> ",
        "import duckdb",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nduckdb.duckdb.InvalidInputException: Invalid Input Error: Python Object \"penguins\" of type \"module\" found on line \"<string>:1\" not suitable for replacement scans.\nMake sure that \"penguins\" is either a pandas.DataFrame, duckdb.DuckDBPyRelation, pyarrow Table, Dataset, RecordBatchReader, Scanner, or NumPy ndarrays with supported format\n",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'df' is not defined\n",
        ">>> ",
        ">>> ",
        "import duckdb",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nduckdb.duckdb.InvalidInputException: Invalid Input Error: Python Object \"penguins\" of type \"module\" found on line \"<string>:1\" not suitable for replacement scans.\nMake sure that \"penguins\" is either a pandas.DataFrame, duckdb.DuckDBPyRelation, pyarrow Table, Dataset, RecordBatchReader, Scanner, or NumPy ndarrays with supported format\n",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'df' is not defined\n",
        ">>> ",
        ">>> ",
        "quit",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "Error in library(dbplyr) : there is no package called ‘dbplyr’\n",
        "> ",
        "install.packages(\"dbplyr\")",
        "Error: package 'dbplyr' is not available\n",
        "> ",
        "con <- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")",
        "Error in loadNamespace(x) : there is no package called ‘DBI’\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "Error in library(dbplyr) : there is no package called ‘dbplyr’\n",
        "> ",
        "install.packages(\"DBI\")",
        "Error: package 'DBI' is not available\n",
        "> ",
        "install.packages(\"DBI\")",
        "Error: package 'DBI' is not available\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "4",
        "- Operation canceled.\n",
        "> ",
        "install.packages(\"DBI\")",
        "Error: package 'DBI' is not available\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "3",
        "\nRestarting R session...\n\n"
    ]
}